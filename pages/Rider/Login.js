import Head from "next/head";
import styles from "../../styles/rider/Login.module.css";
import { useState } from "react";
import { useRouter } from "next/router";
import { Message } from "@/components/Message";
import { signIn } from "next-auth/react";

export default function LoginForm() {
  const [username, setUsername] = useState("");
  const [password, setPassword] = useState("");
  const [savedNotify, setSavedNotify] = useState(null);
  const router = useRouter();


  // const handleSubmit = async (e) => {
  //   e.preventDefault();

  //   try {
  //     const response = await fetch("/api/Rider/login", {
  //       method: "POST",
  //       headers: {
  //         "Content-Type": "application/json",
  //       },
  //       body: JSON.stringify({ username, password }),
  //     });

  //     if (response.ok) {
  //       // Login successful
  //       router.replace("/Rider"); // Redirect to the dashboard page
  //     } else {
  //       // Login failed
  //       setSavedNotify("Invalid username or password");
  //     }
  //   } catch (error) {
  //     console.error("Error logging in:", error);
  //     setSavedNotify("Error logging in. Please try again later.");
  //   }
  // };


  const handleSubmit = async (e) => {
    e.preventDefault();
    const result = await signIn("credentials", {
      username,
      password,
      redirect: false,
    });

    if (result?.error) {
      console.error("Login error:", result.error);
    } else if (result?.ok) {
      router.push("/Rider");
    }
  };



  return (
    <>
      <Head>
        <title>Get Pills</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className={styles.LogDiv}>
        <form className={styles.LogForm} onSubmit={handleSubmit}>
        {savedNotify && <Message info={"Invalid details"}/>}
          <label  className={styles.rider}>
            RIDER
          </label>
          <label className={styles.MailText}>
           Username
          </label>
          <input
            type="text"
            id="email"
            name="mail"
            className={styles.maily}
            placeholder="newuser"
            value={username}
            onChange={(e) => setUsername(e.target.value)}
            required
          />

          <label className={styles.PassText}>
            Password
          </label>
          <input
            type="password"
            id="pass"
            name="password"
            className={styles.pass}
            placeholder="******"
            value={password}
            onChange={(e) => setPassword(e.target.value)}
            required
          />

          <button type="submit" className={styles.button}>
            Log In
          </button>
        </form>
      </div>
    </>
  );
}
